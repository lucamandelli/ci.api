name: CI

on:
  push:
    branches:
      - main

permissions:
  id-token: write
  contents: write
  issues: write
  pull-requests: write

jobs:
  build:
    name: 'Build and Push'
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
      # - name: Setup node | ${{ matrix.node-version }}
      - name: Setup node
        uses: actions/setup-node@v4
        with:
          # node-version: ${{ matrix.node-version }}
          node-version: 20
          cache: 'npm'
      - run: npm ci
      - run: npm test

      - name: Semantic Release
        uses: cycjimmy/semantic-release-action@v4
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}

      - name: Generate tag
        id: generate-tag
        run: |
          SHA=$(echo $GITHUB_SHA | head -c 7)
          echo "sha=$SHA" >> $GITHUB_OUTPUT

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4.2.1
        with:
          role-to-assume: ${{ secrets.ECR_ROLE }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Amazon ECR Login
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2.0.1

      - name: Build docker image
        id: build-docker-image
        env:
          REGISTRY: ${{ steps.login-ecr.outputs.registry}}
          TAG: ${{ steps.generate-tag.outputs.sha }}
        run: |
          docker build -t $REGISTRY/luca-ci:$TAG .
          docker tag $REGISTRY/luca-ci:$TAG $REGISTRY/luca-ci:latest
          docker push --all-tags $REGISTRY/luca-ci
          IMAGE=$(echo $REGISTRY/luca-ci:$TAG)
          echo "image=$IMAGE" >> $GITHUB_OUTPUT

      - name: Deploy to App Runner
        id: deploy-app-runner
        uses: awslabs/amazon-app-runner-deploy@main
        with:
          service: ${{ vars.SERVICE_NAME }}
          image: ${{ steps.build-docker-image.outputs.image }}
          access-role-arn: ${{ secrets.APP_RUNNER_ROLE }}
          region: ${{ secrets.AWS_REGION }}
          cpu: 1
          memory: 2
          port: 3000
          wait-for-service-stability-seconds: 180

      - name: App Runner check
        run: echo "App Runner runnin...${{ steps.deploy-app-runner.outputs.service-url }}"
